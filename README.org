* Actuator Position Control via EtherNet/IP

  The =cpppo_positioner= module allows control of the position of a set of
  actuators, by initiating a communication channel, and issuing new position
  directives via the actuator state machine.  The current state is polled as
  necessary via EtherNet/IP CIP read commands, and data updates and state
  changes are performed via EtherNet/IP CIP writes.

** Installing

   Clone the repository, and run the setup.py installer:
   : $ git clone git@github.com:pjkundert/cpppo_positioner.git
   : $ cd cpppo_positioner
   : $ python setup.py install
   : $ python
   : Python 2.7.6 (default, Sep  9 2014, 15:04:36)
   : [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin
   : Type "help", "copyright", "credits" or "license" for more information.
   : >>> import cpppo_positioner
   : >>>

** Command- or Pipe-line usage

   An executable module entry point (=python -m cpppo_positioner=), and a
   convenience executable script (=cpppo_positioner=) are supplied.
   
   If your application generates a stream of actuator position data, or if you
   have some manual positions you wish to move to, you can use the command-line
   interface.  You may supply one or more actuator positions in blobs of JSON
   data (an actual position would have more entries, such as =acceleration=,
   =deceleration=, =timeout=, ...):
   : $ position='{ "actuator": 0, "position": 12345, "speed": 100 }'

   These positions may be supplied either as single parameters on the command
   line, or as separate lines of input (if standard input is selected, by
   supplying a '-' option):
   : $ python -m cpppo_positioner --address gateway -v "$position"
   : $ echo "$position" | cpppo_positioner --address gateway -v -
